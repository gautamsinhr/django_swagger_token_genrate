"""
Django settings for restwork project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=#96q3w7lapd1#-9fw_5u1njj0ey&p4g#r56$^_e*h8e3m+_9&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    # 'django.contrib.staticfiles',  # required for serving swagger ui's css/js files
    'drf_yasg',
    'app'   
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'restwork.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR,'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'restwork.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'


####### search filter 

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}


#####  pagenation ##

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE':2
}


# authentications dynamic

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
       
    ]

      
}

# /// throttle for request per time 

# REST_FRAMEWORK = {
#     'DEFAULT_THROTTLE_CLASSES': [
#         'rest_framework.throttling.AnonRateThrottle',
#         'rest_framework.throttling.UserRateThrottle'
#     ],
#     'DEFAULT_THROTTLE_RATES': {
#         'anon': '2/min',
#         'user': '2/min'
#     }
# }


SWAGGER_SETTINGS = {
    'SHOW_REQUEST_HEADERS': True,
    'SECURITY_DEFINITIONS': {
        'token': {
            'type': 'apiKey',
            'in': 'header',
            'name': 'Authorization'
        }
    }
}



# SWAGGER_SETTINGS = {
#     'SHOW_REQUEST_HEADERS': True,
#     'SECURITY_DEFINITIONS': {
#         'token': {
#             'type': 'apiKey',
#             'in': 'header',
#             'name': 'api-key'
#         }
#     }
# }

# SWAGGER_SETTINGS = {
#    'USE_SESSION_AUTH': False,
#    'SECURITY_DEFINITIONS': {
#       'Your App API - Swagger': {
#          'type': 'apiKey',
#          'authorizationUrl': '/yourapp/o/authorize',
#          'tokenUrl': 'gettoken/',
#          'flow': 'accessCode',
#          'scopes': {
#           'read:groups': 'read groups',
#          }
#       }
#    },
#    'OAUTH2_CONFIG': {
#       'clientId': 'yourAppClientId',
#       'clientSecret': 'yourAppClientSecret',
#       'appName': 'your application name'
#    },
# }

# SWAGGER_SETTINGS = {
#     "exclude_namespaces": [], # List URL namespaces to ignore
#     "api_version": '0.1',  # Specify your API's version
#     "api_path": "/",  # Specify the path to your API not a root level
#     "enabled_methods": [  # Specify which methods to enable in Swagger UI
#         'get',
#         'post',
#         'put',
#         'patch',
#         'delete'
#     ],
#     "api_key": '', # An API key
#     "is_authenticated": False,  # Set to True to enforce user authentication,
#     "is_superuser": False,  # Set to True to enforce admin only access
# }


# REST_FRAMEWORK = {
# 'DEFAULT_AUTHENTICATION_CLASSES':(
# 'rest_framework.authentication.TokenAuthentication',
# # for browsable api view usage
# 'rest_framework.authentication.SessionAuthentication',
# ),
# 'DEFAULT_PERMISSION_CLASSES': (
# 'rest_framework.permissions.IsAuthenticated',
# ),
# }




# SWAGGER_SETTINGS = {
#     'exclude_url_names': [],
#     'exclude_namespaces': [],
#     'api_version': '0.1',
#     'api_path': '/',
#     'relative_paths': False,
#     'enabled_methods': [
#         'get',
#         'post',
#         'put',
#         'patch',
#         'delete'
#     ], 'api_key': '',
#     'is_authenticated': False,
#     'is_superuser': False,
#     'unauthenticated_user': 'django.contrib.auth.models.AnonymousUser',
#     'permission_denied_handler': None,
#     'resource_access_handler': None,
#     'base_path':'helloreverb.com/docs',
#     'info': {
#         'contact': 'apiteam@wordnik.com',
#         'description': 'This is a sample server Petstore server. '
#                        'You can find out more about Swagger at '
#                        '<a href="http://swagger.wordnik.com">'
#                        'http://swagger.wordnik.com</a> '
#                        'or on irc.freenode.net, #swagger. '
#                        'For this sample, you can use the api key '
#                        '"special-key" to test '
#                        'the authorization filters',
#         'license': 'Apache 2.0',
#         'licenseUrl': 'http://www.apache.org/licenses/LICENSE-2.0.html',
#         'termsOfServiceUrl': 'http://helloreverb.com/terms/',
#         'title': 'Swagger Sample App',
#     },
#     'doc_expansion': 'none',
# }